<!DOCTYPE html>
<html>
  <head>
    <meta charset="UTF-8" name="viewport" content="width=device-width, initial-scale=1, maximum-scale=1">
    <title>qEEG</title>
    <script src="bower_components/jquery/dist/jquery.js"></script>
    <script src="bower_components/react/react.js"></script>
    <script src="bower_components/react/react-dom.js"></script>
    <script src="bower_components/lodash/lodash.js"></script>

    <!-- SCRIPTS -->
    <script type="text/javascript" src="bower_components/d3/d3.min.js"></script>
    <script type="text/javascript" src="bower_components/nvd3/build/nv.d3.min.js"></script>
    <script type="text/javascript" src="bower_components/react-nvd3/dist/react-nvd3.js"></script>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/babel-core/5.8.23/browser.min.js"></script>


    <!-- STYLESHEETS -->
    <link rel="stylesheet" href="bower_components/bootstrap/dist/css/bootstrap.min.css">
    <link rel="stylesheet" type="text/css" href="bower_components/nvd3/build/nv.d3.min.css">
  </head>

  <body>
    <h3> Stacked Bar AUC--ejs</h3>
    <div id="chart-stacked"><svg height="400px"></svg></div>

    <div id="app"></div>
    <script src="lib/graphDataService.js"></script>
    <script src="components/compiled/QEEGChart.js"></script>


    <script>
      d3.json('stackedAreaData.json', function(data) {
        nv.addGraph(function() {
          var chart = nv.models.stackedAreaChart()
            .margin({right: 100})
            .x(function(d) { return d[0] })   //We can modify the data accessor functions...
            .y(function(d) { return d[1] })   //...in case your data is formatted differently.
            .useInteractiveGuideline(true)    //Tooltips which show all data points. Very nice!
            .rightAlignYAxis(true)      //Let's move the y-axis to the right side.
            .showControls(true)       //Allow user to choose 'Stacked', 'Stream', 'Expanded' mode.
            .clipEdge(true);

          //Format x-axis labels with custom function.
          chart.xAxis
            .tickFormat(function(d) {
              return d3.time.format('%x')(new Date(d))
            });

          chart.yAxis
            .tickFormat(d3.format(',.2f'));

          d3.select('#chart-stacked svg')
            .datum(data)
            .call(chart);

          nv.utils.windowResize(chart.update);

          return chart;
        });
      })
    </script>

    <script src="components/compiled/app.js"></script>
  </body>
</html>cd